name: Active session library workflow
on:
  push:
    branches: ['main', 'develop']
  pull_request:
jobs:
  app:
    name: main workflow

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Get Node version
        id: node-version
        run: echo "::set-output name=version::$(node -v)"

      - name: Cache node_modules
        id: nodemodules-cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-nodemodules-${{ steps.node-version.outputs.version }}-${{ hashFiles('**/package.json', '**/yarn.lock') }}
          # No restore keys to generate the cache from scratch each time.

      - name: Install Dependencies
        if: steps.nodemodules-cache.outputs.cache-hit != 'true'
        run: |
          npx yarn-deduplicate --list --fail
          cp yarn.lock yarn.lock.orig
          yarn install --frozen-lockfile --check-files --prefer-offline
          # this check is necessary because --frozen-lockfile is buggy: yarn.lock will be updated if a "resolution" requires it
          cmp -s yarn.lock yarn.lock.orig || { echo "::error file=yarn.lock::yarn.lock file is not up-to-date, please run a yarn install locally"; exit 1; }

      - name: Cache Turbo files
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: '**/.turbo'
          key: ${{ runner.os }}-turbo-${{ steps.node-version.outputs.version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-turbo-
            ${{ runner.os }}-

      - name: Lint
        run: |
          yarn format
          yarn lint

      - name: Test
        run: |
          yarn test

      - name: Build
        run: |
          yarn build
